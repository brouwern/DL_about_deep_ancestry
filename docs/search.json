[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to “Deep Learning about deep ancestry”. This website introduces you to the basics of how DNA sequences and machine learning can be used to characterize someone’s ancestry. The main landing page of the site contains a high-level overview, while additional sections of the site delve into how genomic data is processed and the machine learning algorithms use."
  },
  {
    "objectID": "about.html#data-sources",
    "href": "about.html#data-sources",
    "title": "About",
    "section": "Data Sources",
    "text": "Data Sources\nThese analyses rely on data from the 1000 Genomes Project (1KGP). The data provided by the ~2500 volunteers from throughout the world to the project 1KGP has been foundational to population genomics. In these articles, I use 1KGP data that was augumented with additional samples by Xing, Jorde, and colleagues in their 2010 paper “Toward a more uniform sampling of human genetic diversity: a survey of worldwide populations by high-density genotyping”, who have generously posted their entire dataset online."
  },
  {
    "objectID": "about.html#previous-presentations",
    "href": "about.html#previous-presentations",
    "title": "About",
    "section": "Previous presentations",
    "text": "Previous presentations\nThese articles are based on material from a course I taught at the University of Pittsburgh from 2020 to 2023, and a presentation at PyOhio 2024.\n\nIf you have any questions, please contact me at brouwern at gmail.com or message me on LinkedIn. Code is available on GitHub."
  },
  {
    "objectID": "genome_size_intro.html",
    "href": "genome_size_intro.html",
    "title": "Tutorial: How big is a genome? Exploring size and scope of the human genome in Python",
    "section": "",
    "text": "This tutorial uses basic libraries in Python to explore how big the human genome is and the volume of data generate when we submit a sample to a genetic testing service like 23andMe."
  },
  {
    "objectID": "genome_size_intro.html#introduction",
    "href": "genome_size_intro.html#introduction",
    "title": "Tutorial: How big is a genome? Exploring size and scope of the human genome in Python",
    "section": "",
    "text": "This tutorial uses basic libraries in Python to explore how big the human genome is and the volume of data generate when we submit a sample to a genetic testing service like 23andMe."
  },
  {
    "objectID": "genome_size_intro.html#preliminaries",
    "href": "genome_size_intro.html#preliminaries",
    "title": "Tutorial: How big is a genome? Exploring size and scope of the human genome in Python",
    "section": "Preliminaries",
    "text": "Preliminaries\n\nLibraries\nWe’ll use standard Python data science libraries in this tutorial, including pandas, seaborn, and numpy.\n\nimport pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as mpatches\n\n\n\nData\nThe main dataset in this tutorial is a table of chromosome lengths from the NCBI.\nThis is a small dataset, so we can quickly build a pandas dataframe from the data:\n\n# raw data lists\nchromo_numeric = [1,2,3,4,5,6,7,8,9,10,\n                  11,12,13,14,15,16,17,\n                  18,19,20,21,22,23,24,25]\nchromo_str = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\n                  \"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\n                  \"18\",\"19\",\"20\",\"21\",\"22\",\"X\",\"Y\",\"Mito\"]\nchromo_len = [249250621,243199373,198022430,191154276,180915260,\n                171115067,159138663,146364022,141213431,135534747,135006516,\n                133851895,115169878,107349540,102531392,90354753,81195210,78077248,59128983,\n                63025520,48129895,51304566,155270560,59373566,16569]\n\n# convert to series\nchromo_numeric_ser = pd.Series(chromo_numeric)\nchromo_str_ser = pd.Series(chromo_str)\nchromo_len_ser    = pd.Series(chromo_len)\n\n## additional info\nsnps_approx = chromo_len_ser*0.04\n#chromo_type = [\"Autosome\",\"Sex\",\"Organelle\"]\n#chromo_type = np.repeat(chromo_type, [22,2,1], axis=0)\n#chromo_type_ser = pd.Series(chromo_type)\n\n## build pandas dataframe\nchromo_info = pd.DataFrame({\"chrom_numeric\": chromo_numeric_ser,\n                           \"chromo_str\": chromo_str_ser,\n                           #\"chrom_type\": chromo_type_ser,\n                           \"chrom_len\":   chromo_len_ser,\n                           \"snps_approx\": snps_approx})\n\nThe assembled data looks like this:\n\nchromo_info\n\n\n\n\n\n\n\n\nchrom_numeric\nchromo_str\nchrom_len\nsnps_approx\n\n\n\n\n0\n1\n1\n249250621\n9970024.84\n\n\n1\n2\n2\n243199373\n9727974.92\n\n\n2\n3\n3\n198022430\n7920897.20\n\n\n3\n4\n4\n191154276\n7646171.04\n\n\n4\n5\n5\n180915260\n7236610.40\n\n\n5\n6\n6\n171115067\n6844602.68\n\n\n6\n7\n7\n159138663\n6365546.52\n\n\n7\n8\n8\n146364022\n5854560.88\n\n\n8\n9\n9\n141213431\n5648537.24\n\n\n9\n10\n10\n135534747\n5421389.88\n\n\n10\n11\n11\n135006516\n5400260.64\n\n\n11\n12\n12\n133851895\n5354075.80\n\n\n12\n13\n13\n115169878\n4606795.12\n\n\n13\n14\n14\n107349540\n4293981.60\n\n\n14\n15\n15\n102531392\n4101255.68\n\n\n15\n16\n16\n90354753\n3614190.12\n\n\n16\n17\n17\n81195210\n3247808.40\n\n\n17\n18\n18\n78077248\n3123089.92\n\n\n18\n19\n19\n59128983\n2365159.32\n\n\n19\n20\n20\n63025520\n2521020.80\n\n\n20\n21\n21\n48129895\n1925195.80\n\n\n21\n22\n22\n51304566\n2052182.64\n\n\n22\n23\nX\n155270560\n6210822.40\n\n\n23\n24\nY\n59373566\n2374942.64\n\n\n24\n25\nMito\n16569\n662.76"
  },
  {
    "objectID": "genome_size_intro.html#data-visualization",
    "href": "genome_size_intro.html#data-visualization",
    "title": "Tutorial: How big is a genome? Exploring size and scope of the human genome in Python",
    "section": "Data visualization",
    "text": "Data visualization\n\nChromosome size\n\nsns.barplot(data = chromo_info,\n                x = \"chrom_len\",\n                y = \"chrom_numeric\",\n                orient = 'h'#,\n                #hue = \"chrom_type\"\n                );\n\n\n\n\n\n\n\n\n\n\nHow much of human genome is examined by 23andMe?\nCalculations\n\ntotal = chromo_len_ser.sum()\nsnps_23_and_me = 929045 # from 1117.23andme.txt\nother = total -snps_23_and_me\nsnps_percent = snps_23_and_me/total*100\nprint(\"Approximately\", round(snps_percent,3), \"percent of our genome is represented in data from 23andMe\")\n\nApproximately 0.03 percent of our genome is represented in data from 23andMe\n\n\nPiegraph\n\nplt.close()\nplt.pie([snps_23_and_me,other],\n labels=[\"23andme\\nPositions\",\"Rest of\\ngenome\"]) ;\n\n\n\n\n\n\n\n\nHow much of our genome is examined in research-grade datasets?\n\ngenomes1k = 125484020 # Byrska-Bishop et al 2022\nother = total -genomes1k\nsnps_1kgpercent = genomes1k/total*100\n\nPie graph\n\nplt.close()\nplt.pie([genomes1k,other],\n labels=[\"1000 Genomes\\nProject\",\"Rest of\\ngenome\"]) ;\n\n\n\n\n\n\n\n\n\n\nChromosome size versus amount survey\n\nplt.close()\nbar1 = sns.barplot(data = chromo_info,\nx = \"chrom_len\",\ny = \"chrom_numeric\",\norient = 'h'#,\n    #hue = \"chrom_type\"\n    );\n\nbar2 = sns.barplot(x=\"snps_approx\", y=\"chrom_numeric\", data = chromo_info,color='lightblue',orient = 'h');\n\ntop_bar = mpatches.Patch(color='darkblue', label='x')\nbottom_bar = mpatches.Patch(color='lightblue', label='y')\n\n\nplt.show()"
  },
  {
    "objectID": "genome_size_intro.html#size-of-consumer-genomics-industry",
    "href": "genome_size_intro.html#size-of-consumer-genomics-industry",
    "title": "Tutorial: How big is a genome? Exploring size and scope of the human genome in Python",
    "section": "Size of consumer genomics industry",
    "text": "Size of consumer genomics industry\nTODO: data source\n\nmil = 1000000\nplt.close()\nN = [25000000/mil,14000000/mil,8000000/mil,1628438/mil,300000/mil]\ncompany = [\"Ancestry.com\",\"23andMe\",\"MyHeritage\",\"Family Tree DNA\\nFamily Finder\",\"Living DNA\"]\n\ndf = pd.DataFrame({\"DNA tests (millions)\": N,\n                    \"Company\": company})\n\nsns.barplot(data = df,y = \"DNA tests (millions)\", x = \"Company\")"
  }
]